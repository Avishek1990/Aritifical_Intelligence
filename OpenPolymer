{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.11.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":74608,"databundleVersionId":12966160,"sourceType":"competition"}],"dockerImageVersionId":31089,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n!pip install rdkit-pypi\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-07-27T10:33:18.756403Z","iopub.execute_input":"2025-07-27T10:33:18.756750Z","iopub.status.idle":"2025-07-27T10:33:25.381044Z","shell.execute_reply.started":"2025-07-27T10:33:18.756728Z","shell.execute_reply":"2025-07-27T10:33:25.379413Z"}},"outputs":[{"name":"stdout","text":"Collecting rdkit-pypi\n  Downloading rdkit_pypi-2022.9.5-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.9 kB)\nRequirement already satisfied: numpy in /usr/local/lib/python3.11/dist-packages (from rdkit-pypi) (1.26.4)\nRequirement already satisfied: Pillow in /usr/local/lib/python3.11/dist-packages (from rdkit-pypi) (11.2.1)\nRequirement already satisfied: mkl_fft in /usr/local/lib/python3.11/dist-packages (from numpy->rdkit-pypi) (1.3.8)\nRequirement already satisfied: mkl_random in /usr/local/lib/python3.11/dist-packages (from numpy->rdkit-pypi) (1.2.4)\nRequirement already satisfied: mkl_umath in /usr/local/lib/python3.11/dist-packages (from numpy->rdkit-pypi) (0.1.1)\nRequirement already satisfied: mkl in /usr/local/lib/python3.11/dist-packages (from numpy->rdkit-pypi) (2025.2.0)\nRequirement already satisfied: tbb4py in /usr/local/lib/python3.11/dist-packages (from numpy->rdkit-pypi) (2022.2.0)\nRequirement already satisfied: mkl-service in /usr/local/lib/python3.11/dist-packages (from numpy->rdkit-pypi) (2.4.1)\nRequirement already satisfied: intel-openmp<2026,>=2024 in /usr/local/lib/python3.11/dist-packages (from mkl->numpy->rdkit-pypi) (2024.2.0)\nRequirement already satisfied: tbb==2022.* in /usr/local/lib/python3.11/dist-packages (from mkl->numpy->rdkit-pypi) (2022.2.0)\nRequirement already satisfied: tcmlib==1.* in /usr/local/lib/python3.11/dist-packages (from tbb==2022.*->mkl->numpy->rdkit-pypi) (1.4.0)\nRequirement already satisfied: intel-cmplr-lib-rt in /usr/local/lib/python3.11/dist-packages (from mkl_umath->numpy->rdkit-pypi) (2024.2.0)\nRequirement already satisfied: intel-cmplr-lib-ur==2024.2.0 in /usr/local/lib/python3.11/dist-packages (from intel-openmp<2026,>=2024->mkl->numpy->rdkit-pypi) (2024.2.0)\nDownloading rdkit_pypi-2022.9.5-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (29.4 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m29.4/29.4 MB\u001b[0m \u001b[31m52.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hInstalling collected packages: rdkit-pypi\nSuccessfully installed rdkit-pypi-2022.9.5\n/kaggle/input/neurips-open-polymer-prediction-2025/sample_submission.csv\n/kaggle/input/neurips-open-polymer-prediction-2025/train.csv\n/kaggle/input/neurips-open-polymer-prediction-2025/test.csv\n/kaggle/input/neurips-open-polymer-prediction-2025/train_supplement/dataset2.csv\n/kaggle/input/neurips-open-polymer-prediction-2025/train_supplement/dataset4.csv\n/kaggle/input/neurips-open-polymer-prediction-2025/train_supplement/dataset1.csv\n/kaggle/input/neurips-open-polymer-prediction-2025/train_supplement/dataset3.csv\n","output_type":"stream"}],"execution_count":15},{"cell_type":"code","source":"import warnings\nwarnings.simplefilter(\"ignore\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-27T10:33:50.243977Z","iopub.execute_input":"2025-07-27T10:33:50.244357Z","iopub.status.idle":"2025-07-27T10:33:50.249706Z","shell.execute_reply.started":"2025-07-27T10:33:50.244323Z","shell.execute_reply":"2025-07-27T10:33:50.248495Z"}},"outputs":[],"execution_count":16},{"cell_type":"code","source":"train = pd.read_csv(\"/kaggle/input/neurips-open-polymer-prediction-2025/train.csv\")\ntest = pd.read_csv(\"/kaggle/input/neurips-open-polymer-prediction-2025/test.csv\")","metadata":{"trusted":true,"execution":{"execution_failed":"2025-07-27T10:56:01.678Z"}},"outputs":[],"execution_count":null},{"cell_type":"code","source":"print(f\"Number or SMILES : {len(train)}\")\nprint(f\"Variables : {train.columns}\")\ntrain.describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-27T10:35:16.116025Z","iopub.execute_input":"2025-07-27T10:35:16.116316Z","iopub.status.idle":"2025-07-27T10:35:16.148315Z","shell.execute_reply.started":"2025-07-27T10:35:16.116297Z","shell.execute_reply":"2025-07-27T10:35:16.147190Z"}},"outputs":[{"name":"stdout","text":"Number or SMILES : 7973\nVariables : Index(['id', 'SMILES', 'Tg', 'FFV', 'Tc', 'Density', 'Rg'], dtype='object')\n","output_type":"stream"},{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"                 id          Tg          FFV          Tc     Density  \\\ncount  7.973000e+03  511.000000  7030.000000  737.000000  613.000000   \nmean   1.080050e+09   96.452314     0.367212    0.256334    0.985484   \nstd    6.218241e+08  111.228279     0.029609    0.089538    0.146189   \nmin    8.781700e+04 -148.029738     0.226992    0.046500    0.748691   \n25%    5.376641e+08   13.674509     0.349549    0.186000    0.890243   \n50%    1.079079e+09   74.040183     0.364264    0.236000    0.948193   \n75%    1.621708e+09  161.147595     0.380790    0.330500    1.062096   \nmax    2.147438e+09  472.250000     0.777097    0.524000    1.840999   \n\n               Rg  \ncount  614.000000  \nmean    16.419787  \nstd      4.608640  \nmin      9.728355  \n25%     12.540328  \n50%     15.052194  \n75%     20.411067  \nmax     34.672906  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>Tg</th>\n      <th>FFV</th>\n      <th>Tc</th>\n      <th>Density</th>\n      <th>Rg</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>7.973000e+03</td>\n      <td>511.000000</td>\n      <td>7030.000000</td>\n      <td>737.000000</td>\n      <td>613.000000</td>\n      <td>614.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>1.080050e+09</td>\n      <td>96.452314</td>\n      <td>0.367212</td>\n      <td>0.256334</td>\n      <td>0.985484</td>\n      <td>16.419787</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>6.218241e+08</td>\n      <td>111.228279</td>\n      <td>0.029609</td>\n      <td>0.089538</td>\n      <td>0.146189</td>\n      <td>4.608640</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>8.781700e+04</td>\n      <td>-148.029738</td>\n      <td>0.226992</td>\n      <td>0.046500</td>\n      <td>0.748691</td>\n      <td>9.728355</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>5.376641e+08</td>\n      <td>13.674509</td>\n      <td>0.349549</td>\n      <td>0.186000</td>\n      <td>0.890243</td>\n      <td>12.540328</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>1.079079e+09</td>\n      <td>74.040183</td>\n      <td>0.364264</td>\n      <td>0.236000</td>\n      <td>0.948193</td>\n      <td>15.052194</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>1.621708e+09</td>\n      <td>161.147595</td>\n      <td>0.380790</td>\n      <td>0.330500</td>\n      <td>1.062096</td>\n      <td>20.411067</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>2.147438e+09</td>\n      <td>472.250000</td>\n      <td>0.777097</td>\n      <td>0.524000</td>\n      <td>1.840999</td>\n      <td>34.672906</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":17},{"cell_type":"code","source":"train.head(10)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-27T10:35:23.831274Z","iopub.execute_input":"2025-07-27T10:35:23.831596Z","iopub.status.idle":"2025-07-27T10:35:23.844437Z","shell.execute_reply.started":"2025-07-27T10:35:23.831571Z","shell.execute_reply":"2025-07-27T10:35:23.843495Z"}},"outputs":[{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"        id                                             SMILES  Tg       FFV  \\\n0    87817                         *CC(*)c1ccccc1C(=O)OCCCCCC NaN  0.374645   \n1   106919  *Nc1ccc([C@H](CCC)c2ccc(C3(c4ccc([C@@H](CCC)c5... NaN  0.370410   \n2   388772  *Oc1ccc(S(=O)(=O)c2ccc(Oc3ccc(C4(c5ccc(Oc6ccc(... NaN  0.378860   \n3   519416  *Nc1ccc(-c2c(-c3ccc(C)cc3)c(-c3ccc(C)cc3)c(N*)... NaN  0.387324   \n4   539187  *Oc1ccc(OC(=O)c2cc(OCCCCCCCCCOCC3CCCN3c3ccc([N... NaN  0.355470   \n5   950661               *OC(=O)CCCCCCCCC(=O)OC1COC2C(*)COC12 NaN  0.339093   \n6  1012066  *Nc1ccc([C@H]2[C@@H]3C[C@H]4C[C@@H](C3)C[C@@H]... NaN  0.347616   \n7  1022104  *C(=O)Nc1ccc(Oc2ccc(Oc3ccc(NC(=O)c4ccc5c(c4)C(... NaN  0.377545   \n8  1722264  *CC(*)(C)C(=O)OCCCCCCCCCOc1ccc2cc(C(=O)Oc3cccc... NaN  0.359176   \n9  2265305               *Nc1ccc(-c2ccc(-c3ccc(N*)cc3)cc2)cc1 NaN  0.341878   \n\n         Tc  Density  Rg  \n0  0.205667      NaN NaN  \n1       NaN      NaN NaN  \n2       NaN      NaN NaN  \n3       NaN      NaN NaN  \n4       NaN      NaN NaN  \n5       NaN      NaN NaN  \n6       NaN      NaN NaN  \n7       NaN      NaN NaN  \n8       NaN      NaN NaN  \n9       NaN      NaN NaN  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>SMILES</th>\n      <th>Tg</th>\n      <th>FFV</th>\n      <th>Tc</th>\n      <th>Density</th>\n      <th>Rg</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>87817</td>\n      <td>*CC(*)c1ccccc1C(=O)OCCCCCC</td>\n      <td>NaN</td>\n      <td>0.374645</td>\n      <td>0.205667</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>106919</td>\n      <td>*Nc1ccc([C@H](CCC)c2ccc(C3(c4ccc([C@@H](CCC)c5...</td>\n      <td>NaN</td>\n      <td>0.370410</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>388772</td>\n      <td>*Oc1ccc(S(=O)(=O)c2ccc(Oc3ccc(C4(c5ccc(Oc6ccc(...</td>\n      <td>NaN</td>\n      <td>0.378860</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>519416</td>\n      <td>*Nc1ccc(-c2c(-c3ccc(C)cc3)c(-c3ccc(C)cc3)c(N*)...</td>\n      <td>NaN</td>\n      <td>0.387324</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>539187</td>\n      <td>*Oc1ccc(OC(=O)c2cc(OCCCCCCCCCOCC3CCCN3c3ccc([N...</td>\n      <td>NaN</td>\n      <td>0.355470</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>950661</td>\n      <td>*OC(=O)CCCCCCCCC(=O)OC1COC2C(*)COC12</td>\n      <td>NaN</td>\n      <td>0.339093</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>1012066</td>\n      <td>*Nc1ccc([C@H]2[C@@H]3C[C@H]4C[C@@H](C3)C[C@@H]...</td>\n      <td>NaN</td>\n      <td>0.347616</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>1022104</td>\n      <td>*C(=O)Nc1ccc(Oc2ccc(Oc3ccc(NC(=O)c4ccc5c(c4)C(...</td>\n      <td>NaN</td>\n      <td>0.377545</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>1722264</td>\n      <td>*CC(*)(C)C(=O)OCCCCCCCCCOc1ccc2cc(C(=O)Oc3cccc...</td>\n      <td>NaN</td>\n      <td>0.359176</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>2265305</td>\n      <td>*Nc1ccc(-c2ccc(-c3ccc(N*)cc3)cc2)cc1</td>\n      <td>NaN</td>\n      <td>0.341878</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":18},{"cell_type":"code","source":"test.describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-27T10:35:30.334396Z","iopub.execute_input":"2025-07-27T10:35:30.334725Z","iopub.status.idle":"2025-07-27T10:35:30.346404Z","shell.execute_reply.started":"2025-07-27T10:35:30.334702Z","shell.execute_reply":"2025-07-27T10:35:30.345376Z"}},"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"                 id\ncount  3.000000e+00\nmean   1.521086e+09\nstd    4.693620e+08\nmin    1.109054e+09\n25%    1.265621e+09\n50%    1.422189e+09\n75%    1.727103e+09\nmax    2.032017e+09","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>3.000000e+00</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>1.521086e+09</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>4.693620e+08</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>1.109054e+09</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>1.265621e+09</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>1.422189e+09</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>1.727103e+09</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>2.032017e+09</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":19},{"cell_type":"code","source":"test.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-27T10:35:35.029477Z","iopub.execute_input":"2025-07-27T10:35:35.029763Z","iopub.status.idle":"2025-07-27T10:35:35.039062Z","shell.execute_reply.started":"2025-07-27T10:35:35.029743Z","shell.execute_reply":"2025-07-27T10:35:35.038038Z"}},"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"           id                                             SMILES\n0  1109053969  *Oc1ccc(C=NN=Cc2ccc(Oc3ccc(C(c4ccc(*)cc4)(C(F)...\n1  1422188626  *Oc1ccc(C(C)(C)c2ccc(Oc3ccc(C(=O)c4cccc(C(=O)c...\n2  2032016830  *c1cccc(OCCCCCCCCOc2cccc(N3C(=O)c4ccc(-c5cccc6...","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>SMILES</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1109053969</td>\n      <td>*Oc1ccc(C=NN=Cc2ccc(Oc3ccc(C(c4ccc(*)cc4)(C(F)...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1422188626</td>\n      <td>*Oc1ccc(C(C)(C)c2ccc(Oc3ccc(C(=O)c4cccc(C(=O)c...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2032016830</td>\n      <td>*c1cccc(OCCCCCCCCOc2cccc(N3C(=O)c4ccc(-c5cccc6...</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":20},{"cell_type":"code","source":"import matplotlib.pyplot as plt\nimport seaborn as sns","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-27T10:35:35.648931Z","iopub.execute_input":"2025-07-27T10:35:35.649627Z","iopub.status.idle":"2025-07-27T10:35:35.654284Z","shell.execute_reply.started":"2025-07-27T10:35:35.649585Z","shell.execute_reply":"2025-07-27T10:35:35.653483Z"}},"outputs":[],"execution_count":21},{"cell_type":"code","source":"sns.heatmap(train[train.columns[2:]].corr(), annot =True)\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-27T10:36:05.020363Z","iopub.execute_input":"2025-07-27T10:36:05.020726Z","iopub.status.idle":"2025-07-27T10:36:05.250502Z","shell.execute_reply.started":"2025-07-27T10:36:05.020701Z","shell.execute_reply":"2025-07-27T10:36:05.249482Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 2 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":25},{"cell_type":"code","source":"train[(~train.Tg.isnull())&(~train.FFV.isnull())&(~train.Tc.isnull())&(~train.Density.isnull())&(~train.Rg.isnull())]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-27T10:36:26.429764Z","iopub.execute_input":"2025-07-27T10:36:26.430083Z","iopub.status.idle":"2025-07-27T10:36:26.442408Z","shell.execute_reply.started":"2025-07-27T10:36:26.430059Z","shell.execute_reply":"2025-07-27T10:36:26.441401Z"}},"outputs":[{"execution_count":26,"output_type":"execute_result","data":{"text/plain":"Empty DataFrame\nColumns: [id, SMILES, Tg, FFV, Tc, Density, Rg]\nIndex: []","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>SMILES</th>\n      <th>Tg</th>\n      <th>FFV</th>\n      <th>Tc</th>\n      <th>Density</th>\n      <th>Rg</th>\n    </tr>\n  </thead>\n  <tbody>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":26},{"cell_type":"code","source":"train_idx = train.id","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-27T10:38:07.291075Z","iopub.execute_input":"2025-07-27T10:38:07.291646Z","iopub.status.idle":"2025-07-27T10:38:07.295647Z","shell.execute_reply.started":"2025-07-27T10:38:07.291621Z","shell.execute_reply":"2025-07-27T10:38:07.294576Z"}},"outputs":[],"execution_count":30},{"cell_type":"code","source":"from rdkit import Chem\nfrom rdkit.Chem import rdMolDescriptors\nfrom rdkit.Chem.Draw import MolToFile\nfrom tqdm import tqdm\nimport matplotlib.image as mpimg\nfrom rdkit.Chem.Draw import MolsToGridImage","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-27T10:48:40.991897Z","iopub.execute_input":"2025-07-27T10:48:40.992207Z","iopub.status.idle":"2025-07-27T10:48:40.996880Z","shell.execute_reply.started":"2025-07-27T10:48:40.992186Z","shell.execute_reply":"2025-07-27T10:48:40.995869Z"}},"outputs":[],"execution_count":42},{"cell_type":"markdown","source":"## SMILE MOL FORMULA","metadata":{}},{"cell_type":"code","source":"Chem.MolFromSmiles(train[train.id == i].SMILES.values[0])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-27T10:41:03.957584Z","iopub.execute_input":"2025-07-27T10:41:03.958128Z","iopub.status.idle":"2025-07-27T10:41:03.972135Z","shell.execute_reply.started":"2025-07-27T10:41:03.958095Z","shell.execute_reply":"2025-07-27T10:41:03.971105Z"}},"outputs":[{"execution_count":35,"output_type":"execute_result","data":{"text/plain":"<rdkit.Chem.rdchem.Mol at 0x7e756ede2ea0>","image/png":"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"},"metadata":{}}],"execution_count":35},{"cell_type":"code","source":"MolFormula = []\nfor i in tqdm(train_idx):\n    MolFormula.append(rdMolDescriptors.CalcMolFormula(Chem.MolFromSmiles(train[train.id == i].SMILES.values[0])))\ntrain['mol_formula'] = MolFormula","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-27T10:42:01.024296Z","iopub.execute_input":"2025-07-27T10:42:01.025027Z","iopub.status.idle":"2025-07-27T10:42:08.209245Z","shell.execute_reply.started":"2025-07-27T10:42:01.024999Z","shell.execute_reply":"2025-07-27T10:42:08.208343Z"}},"outputs":[{"name":"stderr","text":"100%|██████████| 7973/7973 [00:07<00:00, 1112.23it/s]\n","output_type":"stream"}],"execution_count":38},{"cell_type":"markdown","source":"## SMILE IMAGE","metadata":{}},{"cell_type":"code","source":"for i in tqdm(train_idx):\n    MolToFile(Chem.MolFromSmiles(train[train.id == i].SMILES.values[0]),f'/kaggle/working/{i}.png')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-27T10:47:23.764712Z","iopub.execute_input":"2025-07-27T10:47:23.765683Z","iopub.status.idle":"2025-07-27T10:48:37.525671Z","shell.execute_reply.started":"2025-07-27T10:47:23.765654Z","shell.execute_reply":"2025-07-27T10:48:37.524742Z"}},"outputs":[{"name":"stderr","text":"100%|██████████| 7973/7973 [01:13<00:00, 108.11it/s]\n","output_type":"stream"}],"execution_count":41},{"cell_type":"code","source":"mat_smiles = {}\nfor i in tqdm(train_idx):\n    mat_smiles[i] = mpimg.imread(f'/kaggle/working/{i}.png')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-07-27T10:53:10.009034Z","iopub.execute_input":"2025-07-27T10:53:10.009342Z","iopub.status.idle":"2025-07-27T10:53:33.169392Z","shell.execute_reply.started":"2025-07-27T10:53:10.009320Z","shell.execute_reply":"2025-07-27T10:53:33.168364Z"}},"outputs":[{"name":"stderr","text":"100%|██████████| 7973/7973 [00:23<00:00, 344.39it/s]\n","output_type":"stream"}],"execution_count":43},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}